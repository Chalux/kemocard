
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.config
{
public sealed partial class Level : Luban.BeanBase
{
    public Level(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        ResPath = _buf.ReadString();
        Desc = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Initcoord = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Initcoord.Add(_e0);}}
    }

    public static Level DeserializeLevel(ByteBuf _buf)
    {
        return new config.Level(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 关卡名
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 路径
    /// </summary>
    public readonly string ResPath;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Desc;
    /// <summary>
    /// 起始格子
    /// </summary>
    public readonly System.Collections.Generic.List<int> Initcoord;
   
    public const int __ID__ = -896917064;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "resPath:" + ResPath + ","
        + "desc:" + Desc + ","
        + "initcoord:" + Luban.StringUtil.CollectionToString(Initcoord) + ","
        + "}";
    }
}

}

